app.controller('HomeCtrl', ['$scope', '$http', '$routeParams', '$location', 'UserServices', function($scope, $http, $routeParams, $location, UserServices){

  $scope.searchTerms = '';
  $scope.category = '';
  $scope.pins = [];
  $scope.loaded = false;
  $scope.category_url = '';
  $scope.user = UserServices;

  var url = '';
  var category_url = '';
  var searchTerms_url = '';
  var limit = 18;
  var offset = 0;
  var end = false;
 
  $http.get('/categories.json').success(function(data){
    $scope.categories = data.categories;
  })

   // set the search url
  $scope.setURL = function() {
    // then this is a user page
    if ($location.path() === "/profile") { url = 'likes.json?'; }  
    // else not a user page, get all pins
    else { url = 'pins.json?'; }
    
    url += 'limit=' + limit + '&offset=' + offset;
    url += $scope.category_url;

    if ($scope.searchTerms != "") {
      searchTerms_url = '&keyword=' + $scope.searchTerms;
    } else {
      searchTerms_url = '';
    }
    // add our search terms to the url
    url += searchTerms_url;
  }
  $scope.setURL();

  $scope.searchPins = function() {
    // new search - set offset to 0
    offset = 0;
    $scope.setURL();
    console.log("About to search: ", url);

    $http.get(url).success(function(data){
      $scope.pins = data.pins;
      $scope.loaded = true;
      // if we have less pins than limit, stop nextPage from running
      if ($scope.pins.count < limit) {
        end = true;
      }      
    }).error(function(response){
      console.log(">>>>> ERROR IN searchPINS ", response);
    });
  }

  if($routeParams.category) {
    // $http.get('categories.json?keyword=' + $routeParams.category).success(function(response) {
    $http.get('categories/' + $routeParams.category + '.json').success(function(response) {
      $scope.category = response;
      $scope.category_url = "&category_id=" + $scope.category.id;
      url += $scope.category_url;
      $scope.searchPins();
    })
    .error(function(response){
      console.log(">>>>> error in get category");
    });
  } else {
    category_url = '';
    // if we have no category in the url, get some pins and get more with infinite scroll as you scroll
    // var end = false;
    $scope.busy = false;
    $scope.after = '';
    $scope.searchPins();
  }

  // inifinite scroll function
  $scope.nextPage = function() {
    if ($scope.busy) return;
    if (end == true) return;
    offset += limit;
    $scope.busy = true;
    $scope.setURL();
    console.log("About to next page with url: ", url);

    $http.get(url).success(function(data){
      var numPins = data.pins.length;
      //console.log("numPins is ", numPins);
      if (numPins < limit){
        end = true;
      }
      for(var i = 0; i < numPins; i++) {
        $scope.pins.push(data.pins[i]);
      }
      $scope.busy = false;
    });
  }

  // Zoom in and out part
  $scope.open = false;
  $scope.openPin = function(pin_id){
    console.log(pin_id);
    $http.get('pins/' + pin_id + '.json').success(function(data){
      $scope.pin = data.pins[0];
    })
    $scope.open = !$scope.open;
  }

  $scope.closePin = function(){
    $scope.pin = null;
    $scope.open = !$scope.open;
  }


  $scope.unlikePin = function(pinID) {
    // deleteData = {'params': myData };
    deleteData = pinID;
    console.log("IN UNLIKE PIN ", deleteData);
    console.log("deleteData is ", deleteData);
    $http.delete('/likes/'+ pinID + '.json').success(function(data){
      $scope.pins[index].liked_by_me = false;
      console.log("back from delete function");
      console.log("data is ", data);
    }).error(function(response){
      console.log("error in unlikePin ", response);
    })
  }

  $scope.likePin = function(pinID) {
    console.log("ABOUT TO LIKE PIN ID: ", pinID);
    $http.post('/likes/' + pinID + '.json').success(function(data){
      $scope.pins[index].liked_by_me; = true;
      console.log("created entry in like table - data: ", data);
    }).error(function(response){
      console.log("error in likePin ", response);
    })
  }

  $scope.likePinToggle = function(index) {
    var liked = $scope.pins[index].liked_by_me;
    // if first time using this variable - set it
    if (typeof liked === 'undefined') { liked = false; }

    var pinID = $scope.pins[index].id;
    if (liked) { $scope.likePin(pinID); }
    else { 
      $scope.unlikePin(pinID);
      $scope.pins.splice(index, 1);
    }
  }

}])
